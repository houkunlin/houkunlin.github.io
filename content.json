[{"title":"OpenStack KVM Ubuntu LVM 扩容磁盘（不新增分区，维持原有分区）","date":"2024-05-21T08:10:22.000Z","path":"2024/05/21/kvm-openstack-ubuntu-lvm-extend-disk/","updated":"2024-05-21T08:10:22.000Z","link":"","excerpt":"关键词：OpenStack KVM Ubuntu LVM 扩容磁盘；虚拟机 Ubuntu LVM 扩容磁盘；Ubuntu LVM 扩容磁盘；扩容 LVM 分区空间；扩容 LVM 分区；扩容 LVM 卷； 如何在不改变分区结构的情况下扩容 LVM 分区空间 条件：空闲空间紧跟在 LVM 分区后面，并且没有其他分区。","categories":[],"tags":[]},{"title":"kvm-openstack-ubuntu-make-img","date":"2024-05-21T08:07:26.000Z","path":"2024/05/21/kvm-openstack-ubuntu-make-img/","updated":"2024-05-21T08:07:26.000Z","link":"","excerpt":"关键词：制作 OpenStack 虚拟机镜像；使用 QEMU 制作虚拟机镜像；制作 KVM 虚拟机镜像； 最近在使用 OpenStack KVM 虚拟化时，想要创建一个 Ubuntu Server 虚拟机，发现无法直接用 ISO 镜像安装新的虚拟机，后来查阅资料发现需要先制作虚拟机镜像，然后才能创建虚拟机。 1. 准备工作","categories":[],"tags":[]},{"title":"基于 MyBatisPlus 数据权限插件实现的自动数据权限（数据范围）查询限制条件功能","date":"2023-09-04T08:34:14.000Z","path":"2023/09/04/data-scope-mybatis-plus-plugin/","updated":"2023-09-04T08:34:14.000Z","link":"","excerpt":"此功能已实现，经测试运行正常 MyBatisPlus 本身有了一个 DataPermissionInterceptor 数据权限插件，但是这个插件默认上是没有任何查询条件拼接的，需要自己去实现一个 MultiDataPermissionHandler 接口来创建所需要的条件表达式。 通过这个功能我们可以实现一个数据范围的功能，也就是根据用户的角色、权限不同，来限制用户查询不同的数据范围。","categories":[],"tags":[]},{"title":"金币云商预约抽签算法","date":"2023-08-22T00:58:56.000Z","path":"2023/08/22/yu-yue-chou-qian/","updated":"2023-08-22T00:58:56.000Z","link":"","excerpt":"最近抢了几场演唱会的票都没有抢到，果然票务就是最大的黄牛。想着要是票务能采用公平公正的抽签方式就好了，这样多少还能有点机会。 突然想到了金币云商用的一种比较公平公正的抽签算法，那就根据算法说明，用代码来实现它试着跑一下看看。 抽签算法如下： 1、抽签计算方法步骤： 注：A：基数；B：翻转数；X：报名次数；Y：种子号，即起始中签号；Z：阶数； （1）A=（抽签日的上一个工作日的深圳证券交易所深证成指“今收”指数×100)×（抽签日的上一个工作日的深圳证券交易所中小100指数“今收”指数×100）×10000； 注：可登录深圳证券交易所网站历史指数行情查询，详见下文附录。A为整数，不能有小数位。 （2）B=将基数A对应的数字倒序排列（如首位是0，则直接抹去）； （3）Y=B/X后所得的余数加1； （4）Z=X/中签数量取整数（去掉小数点后的整数）； （5）最终全部中签的报名号，如下： 第一个中签号=Y; 第二个中签号=Y+Z； 第三个中签号=Y+Z*2； 第N个中签号=Y+Z*(N-1)； 如果第N个中签号码&gt;总报名次数，那么第N个中签号码=Y+Z*(N-1)-总报名次数。 2、举例说明 如某个预订活动，38674次报名，要抽中1500个中签的报名号： （1）每个会员通过报名的先后顺序会得到1到38674的号码作为自己的抽签报名号，每个会员的报名号不同。 （2）按照抽签活动公布的抽签日的上一个工作日的深证证券交易所股票指数收盘行情中，深证板指、中小100收盘指数为抽签计算变量。 例如：2019年4月29日深圳证券交易所收盘行情： 深圳板指：9622.49 中小100：6013.23 （3）根据上述计算步骤 基数A为“5786224554270000”； 基准数反转数B为“724554226875”； 获得种子数/起始中签号Y为“8144”； 阶数：Z=38674/1500（取整数），即为25； 第1个中签号=8144； 第2个中签号=8144+25*1； 第3个中签号=8144+25*2； 以此类推，第1222个中签号=8144+25*(1222-1) 第1223个中签号=8144+25*（1223-1）=38694&gt;38674，所以，第1223个中 签号=8144+25*（1223-1）-38674=20 以此类推，第1500个中签号=8144+25*（1500-1）-38674=6945","categories":[],"tags":[]},{"title":"Gradle发布jar到Gitea的Package Registry","date":"2023-07-14T08:23:17.000Z","path":"2023/07/14/gradle-maven-publish-gitea-packages-repository/","updated":"2023-07-14T08:23:17.000Z","link":"","excerpt":"本次测试版本说明 Gradle 7.6 ，Gitea 1.19.3，SpringBoot 3.x，Java 17 实测 Gradle 7.2 ，Gitea 1.19.3，SpringBoot 2.5.x，Java 1.8 可用 创建一个 AccessToken进入到【个人设置】》【应用】中，在【管理 Access Token】中创建一个 AccessToken ，授权范围选中 package ，然后点击“生成令牌”即可，令牌只显示一次，记得保存好。","categories":[],"tags":[{"name":"git","slug":"git","permalink":"https://houkunlin.gitee.io/tags/git/"},{"name":"gradle","slug":"gradle","permalink":"https://houkunlin.gitee.io/tags/gradle/"},{"name":"gitea","slug":"gitea","permalink":"https://houkunlin.gitee.io/tags/gitea/"}]},{"title":"Spring Webclient 请求Body限制 256KB 问题","date":"2023-06-14T08:19:16.000Z","path":"2023/06/14/spring-webclient-max-request-body-size/","updated":"2023-06-14T08:19:16.000Z","link":"","excerpt":"这个问题很久之前遇到过了，这次遇到另外一个有点类似的问题，那就是 SpringCloudGateway 请求限制 256KB 问题，在这里也记录一下 WebClient 请求限制 256KB 问题的处理方式。 在 How to Resolve Spring Webflux DataBufferLimitException 这篇文章中有提到解决方案，在这里复制一下以做记录。 在创建 WebClient 时设置 exchangeStrategies 参数，示例代码如下：","categories":[],"tags":[]},{"title":"Spring Cloud Gateway 上传文件大小限制 256KB 问题、请求Body限制 256KB 问题","date":"2023-06-14T07:43:38.000Z","path":"2023/06/14/spring-cloud-gateway-max-request-body-size/","updated":"2023-06-14T07:43:38.000Z","link":"","excerpt":"解决常规请求大小限制问题近日，在把文件上传接口放在 SpringCloudGateway 后发现偶尔上传文件失败问题，经过初步排查前端上传文件超过256KB就会出错，经过简单日志排查，发现是我们的网关问题，错误日志大致如下： 1234567891011121314151617181920212223org.springframework.core.io.buffer.DataBufferLimitException: Exceeded limit on max bytes to buffer : 262144 at org.springframework.core.io.buffer.LimitedDataBufferList.raiseLimitException(LimitedDataBufferList.java:99) Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException:Error has been observed at the following site(s): *__checkpoint ⇢ org.springframework.cloud.gateway.filter.WeightCalculatorWebFilter [DefaultWebFilterChain] *__checkpoint ⇢ org.springframework.web.filter.reactive.ServerHttpObservationFilter [DefaultWebFilterChain] *__checkpoint ⇢ HTTP POST &quot;/api/files/upload&quot; [ExceptionHandlingWebHandler]Original Stack Trace: at org.springframework.core.io.buffer.LimitedDataBufferList.raiseLimitException(LimitedDataBufferList.java:99) at org.springframework.core.io.buffer.LimitedDataBufferList.updateCount(LimitedDataBufferList.java:92) at org.springframework.core.io.buffer.LimitedDataBufferList.add(LimitedDataBufferList.java:58) at reactor.core.publisher.MonoCollect$CollectSubscriber.onNext(MonoCollect.java:103) at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:122)// .......2023-06-14T10:54:34.710+08:00 ERROR 54904 --- [ctor-http-nio-6] r.n.channel.ChannelOperationsHandler : [5f5eda41-1, L:/127.0.0.1:8081 ! R:kubernetes.docker.internal/127.0.0.1:55331] Error was received while reading the incoming data. The connection will be closed.io.netty.util.IllegalReferenceCountException: refCnt: 0, decrement: 1 at io.netty.util.internal.ReferenceCountUpdater.toLiveRealRefCnt(ReferenceCountUpdater.java:83) at io.netty.util.internal.ReferenceCountUpdater.release(ReferenceCountUpdater.java:148) at io.netty.buffer.AbstractReferenceCountedByteBuf.release(AbstractReferenceCountedByteBuf.java:101) at io.netty.handler.codec.http.DefaultHttpContent.release(DefaultHttpContent.java:92) at io.netty.util.ReferenceCountUtil.release(ReferenceCountUtil.java:90) at reactor.netty.channel.FluxReceive.onInboundNext(FluxReceive.java:380)","categories":[],"tags":[]},{"title":"Linux sysctl 内核参数配置","date":"2023-04-20T09:09:01.000Z","path":"2023/04/20/linux-sysctl-config/","updated":"2023-04-20T09:09:01.000Z","link":"","excerpt":"在安装完 Linux 后，通常需要对内核做一些优化配置，以下是一些示例配置，创建 /etc/sysctl.d/user.conf 文件并编辑： 12# vm.max_map_count&#x3D;65530 # 默认最大虚拟内存vm.max_map_count&#x3D;262144 然后执行命令 sysctl -p /etc/sysctl.d/user.conf 应用修改","categories":[],"tags":[{"name":"Linux","slug":"Linux","permalink":"https://houkunlin.gitee.io/tags/Linux/"}]},{"title":"SpringBoot ELK 日志部署和配置示例","date":"2023-04-20T07:31:37.000Z","path":"2023/04/20/spring-boot-elk-logstash-config-xml/","updated":"2023-04-20T07:31:37.000Z","link":"","excerpt":"ElasticSearch 部署配置（8.7.0版本）从 ElasticSearch官网 下载安装包 它不允许在 root 下运行，如果当前是 root 用户，则需要创建一个单独的用户：","categories":[],"tags":[{"name":"ELK","slug":"ELK","permalink":"https://houkunlin.gitee.io/tags/ELK/"},{"name":"logstash","slug":"logstash","permalink":"https://houkunlin.gitee.io/tags/logstash/"}]},{"title":"提交软著文档时清理源代码注释的正则表达式","date":"2023-02-09T02:48:45.000Z","path":"2023/02/09/提交软著文档时清理源代码注释的正则表达式/","updated":"2024-02-23T07:48:45.000Z","link":"","excerpt":"适用于 Java (\\x20*)//.* 删除单行的注释内容 (\\x20*)/\\*.*\\n(.*\\*.*\\n)* 删除多行的注释内容 .*//.*\\n 删除单行的注释内容 .*/\\*.*\\n(.*\\*.*\\n)&#123;0,&#125; 删除多行的注释内容 \\n+ 替换成 \\n 删除空白行 合并多个文件的代码内容：type *.java &gt; 00-code.txt ，注意：必须使用 CMD 执行，请不要使用 Windows PowerShell 执行，在 Windows PowerShell 中会出现中文乱码，而在 CMD 中正常","categories":[],"tags":[]},{"title":"关于柳州市市区摩托车限行区域相关信息","date":"2023-02-09T02:35:57.000Z","path":"2023/02/09/liuzhou-moto-disable-run-area/","updated":"2023-02-09T02:35:57.000Z","link":"","excerpt":"柳州市区号牌摩托车是准许在柳州市区道路通行的，可以在官塘大桥通行，但不能驶入莲花隧道。 为了保障群众的出行安全，减少交通事故的发生，及时消除交通安全隐患，根据柳州市道路的交通特点，目前在 莲花隧道 三门江隧道 文昌下穿通道 广雅下穿通道 文林立交桥 五叉路口立交桥","categories":[],"tags":[]},{"title":"Matrix Synapse 服务安装(Docker)","date":"2023-02-09T02:29:35.000Z","path":"2023/02/09/matrix-synapse-install-for-docker/","updated":"2023-02-09T02:29:35.000Z","link":"","excerpt":"1. 创建一个工作目录1mkdir -p /var/matrix-synapse-data/ 2. 生成 Synapse 配置文件","categories":[],"tags":[]},{"title":"把有公网IP的NAS安全的暴露在公网环境","date":"2023-01-19T01:53:27.000Z","path":"2023/01/19/nas-ip/","updated":"2023-01-19T01:53:27.000Z","link":"","excerpt":"前期准备条件： 有一个域名（对外提供访问服务） 有一个公网IP，固定公网IP或者动态公网IP都行 拨号路由器支持端口映射 路由器或者NAS能够设置免费的DDNS动态域名解析 利用Cloudflare隐藏NAS 前期分析说明","categories":[],"tags":[]},{"title":"SpringCloudGateway跨域配置","date":"2022-03-04T02:58:47.000Z","path":"2022/03/04/spring-cloud-gateway-cors/","updated":"2022-03-04T02:58:47.000Z","link":"","excerpt":"先放一个可行的配置信息，后面再说过程。 1234567891011121314151617181920spring: cloud: gateway: globalcors: # 一个全局默认的跨域配置，但是单独配置这个还是无法解决跨域问题 cors-configurations: &#x27;[/**]&#x27;: allowedOriginPatterns: &quot;*&quot; allowedHeaders: &quot;*&quot; allowedMethods: &quot;*&quot; allowCredentials: true default-filters: # 然后再对跨域Header配置做去重复处理，这样就能够保证跨域信息的完整度 # 升级 SpringBoot 3.0 之后，发现这个配置得写在前面才行，写在前面的最后执行 - DedupeResponseHeader=Vary Access-Control-Allow-Origin Access-Control-Allow-Credentials, RETAIN_LAST # 为了防止后端未配置跨域导致浏览器提示缺少跨域配置信息而请求失败，因此加上了默认的跨域Header配置 - AddResponseHeader=Access-Control-Allow-Origin, * - AddResponseHeader=Access-Control-Allow-Methods, * - AddResponseHeader=Access-Control-Allow-Headers, * - AddResponseHeader=Access-Control-Allow-Credentials, true 最近在使用 Nginx 转发到 SpringCloudGateway 发现了跨域问题，SpringCloud是已经配置了跨域信息，但是手机端（uni-app）依旧无法请求成功，经过尝试在Nginx配置跨域头部同样不行，最后排查了很久，得出了以下结论：","categories":[],"tags":[{"name":"SpringBoot","slug":"SpringBoot","permalink":"https://houkunlin.gitee.io/tags/SpringBoot/"},{"name":"SpringCloud","slug":"SpringCloud","permalink":"https://houkunlin.gitee.io/tags/SpringCloud/"}]},{"title":"SpringBootJpa自定义ID主键策略注册到Hibernate默认策略列表中（自定义全局主键策略）","date":"2022-03-04T02:55:46.000Z","path":"2022/03/04/spring-boot-jpa-id-strategy/","updated":"2022-03-04T02:55:46.000Z","link":"","excerpt":"如何在Hibernate JPA EntityManager中注册自定义IdentifierGenerator？ 在使用SpringBootJpa自定义主键策略的时候，通常需要使用三个注解： 1234@javax.persistence.Id@javax.persistence.GeneratedValue(generator = &quot;id&quot;)@org.hibernate.annotations.GenericGenerator(name = &quot;id&quot;, strategy = &quot;com.xxx.XXXIdentifierGenerator&quot;)private String id;","categories":[],"tags":[{"name":"SpringBoot","slug":"SpringBoot","permalink":"https://houkunlin.gitee.io/tags/SpringBoot/"},{"name":"Jpa","slug":"Jpa","permalink":"https://houkunlin.gitee.io/tags/Jpa/"},{"name":"Hibernate","slug":"Hibernate","permalink":"https://houkunlin.gitee.io/tags/Hibernate/"}]},{"title":"Docker 运行 Java 程序时遇到中文字体异常问题解决方案","date":"2022-01-21T14:54:58.000Z","path":"2022/01/21/docker-zh-cn-font/","updated":"2022-01-21T14:54:58.000Z","link":"","excerpt":"问题描述在我们日常开发中通常会遇到需要在程序中导出Excel电子表格，或者生成带有中文汉字的图片，此时通常会遇到异常报错，一般情况下都是缺少相关字体导致的。 此时我们需要在 docker 容器中安装相关字体应用程序库，以及加入中文字体到 docker 容器中。","categories":[],"tags":[{"name":"docker","slug":"docker","permalink":"https://houkunlin.gitee.io/tags/docker/"},{"name":"java","slug":"java","permalink":"https://houkunlin.gitee.io/tags/java/"},{"name":"springboot","slug":"springboot","permalink":"https://houkunlin.gitee.io/tags/springboot/"}]},{"title":"MySQL 数据库迁移 达梦数据库 踩坑日记","date":"2021-12-23T02:42:42.000Z","path":"2021/12/23/mysql-migrate-dm/","updated":"2021-12-23T02:42:42.000Z","link":"","excerpt":"踩坑1：存储汉字出现长度不够问题在 MySQL 中使用 varchar(1) 可以存储1个汉字，在原样迁移到达梦数据库后会出现插入、修改失败问题，因为达梦数据库需要 varchar(3) 才能存储1个汉字。 可以使用达梦数据库迁移工具的数据类型映射功能来解决：","categories":[],"tags":[{"name":"达梦","slug":"达梦","permalink":"https://houkunlin.gitee.io/tags/%E8%BE%BE%E6%A2%A6/"},{"name":"DM","slug":"DM","permalink":"https://houkunlin.gitee.io/tags/DM/"},{"name":"MySQL","slug":"MySQL","permalink":"https://houkunlin.gitee.io/tags/MySQL/"},{"name":"达梦数据库迁移","slug":"达梦数据库迁移","permalink":"https://houkunlin.gitee.io/tags/%E8%BE%BE%E6%A2%A6%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BF%81%E7%A7%BB/"}]},{"title":"Docker 容器中文字体乱码、无法加载中文字体","date":"2021-12-23T02:38:42.000Z","path":"2021/12/23/docker-fonts/","updated":"2021-12-23T02:38:42.000Z","link":"","excerpt":"在使用 java:8-alpine 镜像打包 java 项目运行后发现有些需要生成含中文文字图片的接口出现异常，或者生成的中文乱码，主要是容器没有中文字体导致的。 可以在打包容器的使用增加字体安装命令： 1apk add ttf-dejavu fontconfig","categories":[],"tags":[{"name":"docker","slug":"docker","permalink":"https://houkunlin.gitee.io/tags/docker/"},{"name":"容器字体","slug":"容器字体","permalink":"https://houkunlin.gitee.io/tags/%E5%AE%B9%E5%99%A8%E5%AD%97%E4%BD%93/"}]},{"title":"Linux三级等保踩坑日记","date":"2021-12-23T02:28:01.000Z","path":"2021/12/23/linux-level-3-bug/","updated":"2021-12-23T02:28:01.000Z","link":"","excerpt":"踩坑1：服务器无法登录 禁用 root 帐号登录 修改 /etc/ssh/sshd_config 文件增加 PermitRootLogin no 配置 设置密码有效期；例如：设置密码有效期30天，30天后密码过期，必须修改密码才能登录 修改 /etc/login.defs 文件增加 PASS_MAX_DAYS 30 配置 设置文件属性：chattr +i /etc/shadow 静候30天你会发现惊喜：登录服务器提示必须修改密码，但是修改密码失败","categories":[],"tags":[{"name":"Linux","slug":"Linux","permalink":"https://houkunlin.gitee.io/tags/Linux/"},{"name":"三级等保","slug":"三级等保","permalink":"https://houkunlin.gitee.io/tags/%E4%B8%89%E7%BA%A7%E7%AD%89%E4%BF%9D/"},{"name":"安全基线","slug":"安全基线","permalink":"https://houkunlin.gitee.io/tags/%E5%AE%89%E5%85%A8%E5%9F%BA%E7%BA%BF/"}]},{"title":"通过 Privoxy 把 Shadowsocks 转成 Http 代理","date":"2020-11-06T18:18:20.000Z","path":"2020/11/07/socks5-to-http/","updated":"2020-11-06T18:18:20.000Z","link":"","excerpt":"这个脚本放在草稿里面很久了，今天放出来。 通过一个脚本一键把一个普通的 Ubuntu Docker 容器变成一个代理转发 Socks5 的服务器。 123456789101112131415161718192021222324252627282930313233343536#!/bin/bash# https://qastack.cn/superuser/423563/convert-http-requests-to-socks5# https://gist.github.com/xwsg/5ecd015be95a61875d43df87c451aca4# https://edxi.github.io/2018/07/09/Shadowsocks_Privoxy_Squid_GFWlist/# 安装软件apt update &amp;&amp; apt install shadowsocks-libev privoxy systemctl -y# 替换 Privoxy 配置文件# 去除注释内容echo &quot;$(awk &#x27;/^[^#]/&#x27; /etc/privoxy/config)&quot; &gt;/etc/privoxy/config# 替换监听IP配置echo &quot;$(sed &#x27;s/127.0.0.1/0.0.0.0/g&#x27; /etc/privoxy/config | sed &#x27;/listen.*\\[.*/&#x27;d)&quot; &gt;/etc/privoxy/config# 加入转发配置echo &quot;forward-socks5t / 127.0.0.1:1080 .&quot; &gt;&gt;/etc/privoxy/config# 替换 ss-local 配置文件cat &lt;&lt;EOF &gt;/etc/shadowsocks-libev/config.json&#123; &quot;server&quot;:&quot;server.host&quot;, &quot;mode&quot;:&quot;tcp_and_udp&quot;, &quot;server_port&quot;:8044, &quot;local_port&quot;:1080, &quot;local_address&quot;:&quot;0.0.0.0&quot;, &quot;password&quot;:&quot;my password&quot;, &quot;timeout&quot;:60, &quot;method&quot;:&quot;aes-256-cfb&quot;&#125;EOF# 启动本地 SSnohup ss-local -c /etc/shadowsocks-libev/config.json &gt;sslocal.log &amp;# 启动 Privoxy/etc/init.d/privoxy start","categories":[],"tags":[{"name":"shell","slug":"shell","permalink":"https://houkunlin.gitee.io/tags/shell/"}]},{"title":"部署 SpringBoot 项目时一个 Linux Service 模板","date":"2020-10-26T04:09:04.000Z","path":"2020/10/26/linux-service/","updated":"2020-10-27T02:22:10.000Z","link":"","excerpt":"app.jar 的启动在服务器上启动项目时最简单的启动项目方法是直接执行 java -jar app.jar 命令，或者使用 nohup 进入到后台运行 nohup java -jar app.jar &amp; 。 但是当我们重新部署、重启项目时会比较麻烦，我们需要通过 ps -ef|grep app.jar 来找到我们项目执行时的进程ID PID ，然后再执行 kill -9 $PID 来杀掉当前正在运行的项目，之后再重新运行项目。","categories":[],"tags":[]},{"title":"Ventoy -- 新一代多系统启动U盘解决方案","date":"2020-10-10T01:44:50.000Z","path":"2020/10/10/ventoy/","updated":"2020-10-10T01:44:50.000Z","link":"","excerpt":"以前第一次用的PE是老毛桃，后来换了微PE，这个 Ventoy 还是第一次听说，并且是在抖音上面刷到的。迫不及待的试了一下。 据官方说有以下特性： 100% 开源 (许可证) 使用简单 (使用说明) 快速 (拷贝文件有多快就有多快) 直接从 ISO/WIM/IMG/VHD(x)/EFI 文件启动，无需解开 无差异支持Legacy + UEFI 模式 UEFI 模式支持安全启动 (Secure Boot) (1.0.07版本开始) 说明 支持持久化 (1.0.11版本开始) 说明 支持MBR和GPT分区格式(1.0.15+) 支持自动安装部署(1.0.09+) 说明 支持超过4GB的ISO文件 保留ISO原始的启动菜单风格(Legacy &amp; UEFI) 支持大部分常见操作系统, 已测试550+ 个ISO文件 不仅仅是启动，而是完整的安装过程 ISO文件支持列表模式或目录树模式显示 说明 提出 “Ventoy Compatible” 概念 支持插件扩展 启动过程中支持U盘设置写保护 不影响U盘日常普通使用 版本升级时数据不会丢失 无需跟随操作系统升级而升级Ventoy","categories":[],"tags":[]},{"title":"一些Shell命令使用","date":"2020-09-19T06:49:54.000Z","path":"2020/09/19/common-shell/","updated":"2020-09-19T06:49:54.000Z","link":"","excerpt":"acme.sh1234567891011121314#!/bin/bash# 安装 acme.shcurl https://get.acme.sh | sh# 暴露阿里云DNS的KEY，请到阿里云控制台申请export Ali_Key=&quot;***&quot;export Ali_Secret=&quot;***&quot;# 使用阿里云DNS验证域名来生成 SSL 证书，acme.sh暂时无法为中文域名签发证书acme.sh --issue --dns dns_ali -d houkunlin.cn -d *.houkunlin.cn# 使用 acme.sh 生成 SSL 证书后，把 SSL 证书安装到 Nginxacme.sh --installcert -d houkunlin.cn --key-file /etc/nginx/houkunlin.cn.key --fullchain-file /etc/nginx/houkunlin.cn.cer --reloadcmd &quot;systemctl force-reload nginx&quot;","categories":[],"tags":[{"name":"shell","slug":"shell","permalink":"https://houkunlin.gitee.io/tags/shell/"}]},{"title":"一些Docker镜像使用","date":"2020-09-19T06:32:45.000Z","path":"2020/09/19/common-docker-image-run/","updated":"2020-09-19T06:32:45.000Z","link":"","excerpt":"Portainer123#!/bin/bashdocker run --name portainer -d -p 8000:8000 -p 9000:9000 -v /var/run/docker.sock:/var/run/docker.sock -v /opt/portainer/data:/data -e TZ=Asia/Shanghai portainer/portainer Rabbitmq","categories":[],"tags":[{"name":"docker","slug":"docker","permalink":"https://houkunlin.gitee.io/tags/docker/"}]},{"title":"CentOS下使用Docker并且不关闭防火墙","date":"2020-09-19T05:54:51.000Z","path":"2020/09/19/centos-firewall-docker/","updated":"2020-09-19T05:54:51.000Z","link":"","excerpt":"通常情况下我们使用CentOS第一件事就是关闭防火墙 systemctl stop firewalld 和禁止防火墙自启动 systemctl disable firewalld 。但是关闭防火墙后，意味着服务器将会暴露在一种不安全的状态。 而我们使用Docker运行一些服务的时候，外部网络请求因为防火墙的原因将无法正确的请求到Docker容器内部，因此需要对防火墙做一些设置。 主要就是配置防火墙 zone 对应的网络接口，和给指定的 zone 增加 service，以下给出一个示例的 shell 命令：","categories":[],"tags":[{"name":"docker","slug":"docker","permalink":"https://houkunlin.gitee.io/tags/docker/"},{"name":"centos","slug":"centos","permalink":"https://houkunlin.gitee.io/tags/centos/"}]},{"title":"Windows的命令行安装程序 - scoop","date":"2019-11-29T02:52:37.000Z","path":"2019/11/29/scoop/","updated":"2019-11-29T02:52:37.000Z","link":"","excerpt":"今天介绍一款在Windows下的命令安装程序，用过Linux的都懂，在Linux下有一个包管理器用来安装应用，比如 Ubuntu 的 apt 和 apt-get ，以及 CentOS 的 yum 这些，那么在Windows下有没有类似的软件或者工具呢？ 有！那就是 scoop 。 scoop - Windows的命令安装程序","categories":[],"tags":[]},{"title":"Spring Cloud 和 Spring Boot 对应的版本关系说明","date":"2019-11-15T02:31:07.000Z","path":"2019/11/15/spring-cloud-version/","updated":"2019-11-15T02:31:07.000Z","link":"","excerpt":"参考博客：https://www.zhaofeida.com/articles/2019/10/15/1571131822791.html 官网地址：https://start.spring.io/actuator/info 123456789101112131415161718192021222324252627282930313233# 2019年11月15日&quot;Finchley.M2&quot;: &quot;Spring Boot &gt;&#x3D;2.0.0.M3 and &lt;2.0.0.M5&quot;,&quot;Finchley.M3&quot;: &quot;Spring Boot &gt;&#x3D;2.0.0.M5 and &lt;&#x3D;2.0.0.M5&quot;,&quot;Finchley.M4&quot;: &quot;Spring Boot &gt;&#x3D;2.0.0.M6 and &lt;&#x3D;2.0.0.M6&quot;,&quot;Finchley.M5&quot;: &quot;Spring Boot &gt;&#x3D;2.0.0.M7 and &lt;&#x3D;2.0.0.M7&quot;,&quot;Finchley.M6&quot;: &quot;Spring Boot &gt;&#x3D;2.0.0.RC1 and &lt;&#x3D;2.0.0.RC1&quot;,&quot;Finchley.M7&quot;: &quot;Spring Boot &gt;&#x3D;2.0.0.RC2 and &lt;&#x3D;2.0.0.RC2&quot;,&quot;Finchley.M9&quot;: &quot;Spring Boot &gt;&#x3D;2.0.0.RELEASE and &lt;&#x3D;2.0.0.RELEASE&quot;,&quot;Finchley.RC1&quot;: &quot;Spring Boot &gt;&#x3D;2.0.1.RELEASE and &lt;2.0.2.RELEASE&quot;,&quot;Finchley.RC2&quot;: &quot;Spring Boot &gt;&#x3D;2.0.2.RELEASE and &lt;2.0.3.RELEASE&quot;,&quot;Finchley.SR4&quot;: &quot;Spring Boot &gt;&#x3D;2.0.3.RELEASE and &lt;2.0.999.BUILD-SNAPSHOT&quot;,&quot;Finchley.BUILD-SNAPSHOT&quot;: &quot;Spring Boot &gt;&#x3D;2.0.999.BUILD-SNAPSHOT and &lt;2.1.0.M3&quot;,&quot;Greenwich.M1&quot;: &quot;Spring Boot &gt;&#x3D;2.1.0.M3 and &lt;2.1.0.RELEASE&quot;,&quot;Greenwich.SR3&quot;: &quot;Spring Boot &gt;&#x3D;2.1.0.RELEASE and &lt;2.1.11.BUILD-SNAPSHOT&quot;,&quot;Greenwich.BUILD-SNAPSHOT&quot;: &quot;Spring Boot &gt;&#x3D;2.1.11.BUILD-SNAPSHOT and &lt;2.2.0.M4&quot;,&quot;Hoxton.RC2&quot;: &quot;Spring Boot &gt;&#x3D;2.2.0.M4 and &lt;2.2.2.BUILD-SNAPSHOT&quot;,&quot;Hoxton.BUILD-SNAPSHOT&quot;: &quot;Spring Boot &gt;&#x3D;2.2.2.BUILD-SNAPSHOT&quot;# 2023年4月20日&quot;Hoxton.SR12&quot;: &quot;Spring Boot &gt;&#x3D;2.2.0.RELEASE and &lt;2.4.0.M1&quot;,&quot;2020.0.6&quot;: &quot;Spring Boot &gt;&#x3D;2.4.0.M1 and &lt;2.6.0-M1&quot;,&quot;2021.0.0-M1&quot;: &quot;Spring Boot &gt;&#x3D;2.6.0-M1 and &lt;2.6.0-M3&quot;,&quot;2021.0.0-M3&quot;: &quot;Spring Boot &gt;&#x3D;2.6.0-M3 and &lt;2.6.0-RC1&quot;,&quot;2021.0.0-RC1&quot;: &quot;Spring Boot &gt;&#x3D;2.6.0-RC1 and &lt;2.6.1&quot;,&quot;2021.0.6&quot;: &quot;Spring Boot &gt;&#x3D;2.6.1 and &lt;3.0.0-M1&quot;,&quot;2022.0.0-M1&quot;: &quot;Spring Boot &gt;&#x3D;3.0.0-M1 and &lt;3.0.0-M2&quot;,&quot;2022.0.0-M2&quot;: &quot;Spring Boot &gt;&#x3D;3.0.0-M2 and &lt;3.0.0-M3&quot;,&quot;2022.0.0-M3&quot;: &quot;Spring Boot &gt;&#x3D;3.0.0-M3 and &lt;3.0.0-M4&quot;,&quot;2022.0.0-M4&quot;: &quot;Spring Boot &gt;&#x3D;3.0.0-M4 and &lt;3.0.0-M5&quot;,&quot;2022.0.0-M5&quot;: &quot;Spring Boot &gt;&#x3D;3.0.0-M5 and &lt;3.0.0-RC1&quot;,&quot;2022.0.0-RC1&quot;: &quot;Spring Boot &gt;&#x3D;3.0.0-RC1 and &lt;3.0.0-RC2&quot;,&quot;2022.0.0-RC2&quot;: &quot;Spring Boot &gt;&#x3D;3.0.0-RC2 and &lt;3.0.0&quot;,&quot;2022.0.2&quot;: &quot;Spring Boot &gt;&#x3D;3.0.0 and &lt;3.1.0-M1&quot;","categories":[],"tags":[]},{"title":"达梦数据库培训内容操作记录","date":"2019-09-16T08:14:20.000Z","path":"2019/09/16/database-dameng/","updated":"2019-09-16T08:14:20.000Z","link":"","excerpt":"1. 数据库安装准备 1.1 系统参数检验： 检验最大可打开文件数目 ulimit -n 检查可打开文件最大数目 ulimit -n $&#123;number&#125; 设置可打开文件最大数目 vi /etc/security/limits.conf 在里面添加 1234567# 给所有用户添加最大文件打开数目，该方式无法对root用户生效，root用户需要单独配置* soft nofile 65535* hard nofile 65536# 给root用户添加最大文件打开数目，root用户需要单独的配置root soft nofile 65535root hard nofile 65536 这个操作对root用户和其他所有用户设置最大文件打开数目，设置完后注销当前用户即可生效。","categories":[],"tags":[{"name":"达梦","slug":"达梦","permalink":"https://houkunlin.gitee.io/tags/%E8%BE%BE%E6%A2%A6/"},{"name":"数据库","slug":"数据库","permalink":"https://houkunlin.gitee.io/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"}]},{"title":"Ubuntu下使用本地PAC文件代理导致谷歌浏览器无法走代理问题解决方案","date":"2019-05-30T08:31:23.000Z","path":"2019/05/30/chrome-pac-error/","updated":"2019-05-30T08:31:23.000Z","link":"","excerpt":"今天升级了我ubuntu的谷歌浏览器，最新版本74.0.3729.169，具体为版本 74.0.3729.169（正式版本）Built on Ubuntu , running on Ubuntu 18.04 （64 位），升级后出问题了，我的谷歌浏览器无法访问走代理了。 原始的pac路径为：file:///opt/autoproxy.pac","categories":[],"tags":[]},{"title":"Eclipse和IDEA同时开发WEB项目配置教程(springline)","date":"2019-05-22T07:29:11.000Z","path":"2019/05/22/gxcerc-2019-05-22-study-03/","updated":"2019-05-22T07:29:11.000Z","link":"","excerpt":"时隔两天才更新日志，前两天偷了点懒，没有什么输出，也就没有什么可以写的。今天写一下如何使用Eclipse和IDEA同时开发公司的这个demo项目，直接导入项目肯定多少是有一点问题的，因此需要做一些相关的配置，这篇日志就是说明如何更改和设置这些配置。 Eclipse 开发工具","categories":[],"tags":[]},{"title":"实习总结-接触demo第二天","date":"2019-05-17T16:40:41.000Z","path":"2019/05/18/gxcerc-2019-05-19-study-02/","updated":"2019-05-17T16:40:41.000Z","link":"","excerpt":"昨晚上玩手机有点晚，两点多才睡，结果今天睡到中午12点，洗漱吃完饭，下午1点钟了。 该开始今天的计划了，接着昨晚上的项目。先把昨晚上发现的项目情况记录一下，都有下面这些东西。","categories":[],"tags":[]},{"title":"实习总结-初次接触项目","date":"2019-05-17T15:57:32.000Z","path":"2019/05/17/gxcerc-2019-05-18-study-01/","updated":"2019-05-17T15:57:32.000Z","link":"","excerpt":"今天早上9点多的时候，老师在微信群里面发了实习任务，是一个压缩包，里面包含公司的所用框架开发文档和一个demo。其中有四个开发文档和一个demo压缩包 一个UI的文档 一个Java编码规范文档 一个Velocity用户手册 一个公司自主框架的开发框架培训手册 一个公司自主框架的开发指引 这几个文档的更新时间是2017-12-11到2017-12-18，距离今天19-05-17时间有点久远。","categories":[],"tags":[]},{"title":"开始 flutter hello word 遇到问题记录","date":"2018-12-28T01:16:21.000Z","path":"2018/12/28/flutter-start/","updated":"2018-12-28T01:16:21.000Z","link":"","excerpt":"参考教程 flutter中文网: https://flutterchina.club/get-started/install/ 基本步骤跟着中文网教程走就行,下面记录一些在过程中遇到的问题","categories":[],"tags":[{"name":"flutter","slug":"flutter","permalink":"https://houkunlin.gitee.io/tags/flutter/"}]},{"title":"总结我在这几周工作中常用到的一些git命令","date":"2018-12-22T09:50:40.000Z","path":"2018/12/22/work-git/","updated":"2018-12-22T09:50:40.000Z","link":"","excerpt":"克隆一个远端仓库到本地 git clone &#123;url&#125; 克隆一个地址{url}的仓库代码到本地 把文件添加进缓存","categories":[],"tags":[]},{"title":"微服务组件之间的故事","date":"2018-12-05T02:08:09.000Z","path":"2018/12/05/microservice-story/","updated":"2018-12-05T02:08:09.000Z","link":"","excerpt":"微服务组件: 服务治理/注册中心,网关,微服务,服务调用 大宅院: 整个应用 宅院管家: 服务治理/注册中心 管家助理: 网关 跑腿: 服务调用 有个富豪,就是我,有一个大宅院,需要对外提供各种各样的服务,现在我的宅院里面拥有各种人才,可以为别人提供它们所需要的服务,但是我一个人忙不过来.因此我需要请一个管家(注册中心/服务治理),让他帮我管理宅院的人才,所有的人才上下班都去管家那里报道.后来我发现,我们需要一个前台来对客人提供基础的帮助以及辅助我们的管家和其他专业人才,因此决定给管家招一个助理(网关),由助理对来访人员进行筛选,以及任务分配.用户来到前台,跟助理说我找张三给我办理出过手续,这是材料,助理问管家","categories":[],"tags":[]},{"title":"考级任务","date":"2018-11-27T02:00:21.000Z","path":"2018/11/27/ge-task/","updated":"2018-11-27T02:00:21.000Z","link":"","excerpt":"任务涉及内容C端任务 学校信息：详情、介绍 数据库表：完成-等待业务开发时过程的完善 实体类： service业务 controller接口 学校列表：查询功能》有一个科目扩展表（t_grade_subject_school）关联着相关的数据 按照类型、科目、等级搜索 学校老师介绍：获取学校详情和评审老师信息 数据库表：完成-等待业务开发时过程的完善 实体类： service业务 controller接口 考生信息：用户考生编辑 数据库表：完成-等待业务开发时过程的完善 实体类： service业务 controller接口 用户信息：我的一级分销客户信息 数据库表：完成-等待业务开发时过程的完善 实体类： service业务 controller接口 佣金明细：新建一个表来记录每一笔佣金信息，同时在订单里面也要有相关的信息（关联订单）》有一个：交易记录表（t_grade_transaction_record）存储这这个信息 数据库表：完成-等待业务开发时过程的完善 实体类： service业务 controller接口 意见反馈：小程序用户反馈功能、A端用户反馈管理功能 数据库表： 实体类： service业务 controller接口","categories":[],"tags":[]},{"title":"2018年11月16日分享-解说词（对应PPT在制作当中）","date":"2018-11-15T07:41:57.000Z","path":"2018/11/15/say/","updated":"2018-11-15T07:41:57.000Z","link":"","excerpt":"PPT下载（谷歌幻灯片） 开头语各位同事们好，我叫侯坤林，非常感谢各位同事百忙之中抽出时间来听我汇报这两周的学习情况，我感到十分荣幸，我若有什么表达得不对的地方，还请各位同事多多包涵和指正，谢谢！","categories":[],"tags":[]},{"title":"study-spring-cloud","date":"2018-11-15T02:59:37.000Z","path":"2018/11/15/study-spring-cloud/","updated":"2023-02-09T02:19:14.051Z","link":"","excerpt":"分享大纲 描述我进公司前在学校的状态 计算机网络 数据结构与算法 单打独斗，使用 gradle 学习 kotlin 讲我这一周的状态 [[x]]学习敏捷开发 学习容器 学习 MyBatis 学习 SpringCloud 学习 git 、 git flow 阿里代码规范 总结我这一周为什么有这些变化 学习得越多，只能表明我以前不够好 对我来说，初入社会，一切从头开始","categories":[],"tags":[]},{"title":"我在代码规范踩的坑","date":"2018-11-13T09:53:21.000Z","path":"2018/11/13/ibona-2018-11-13-update-code/","updated":"2022-03-04T03:26:50.197Z","link":"","excerpt":"注释 最大的坑：前期没有写注释，后面得一个一个的补回来 类注释：注释作者、注释类功能 方法注释：说明、参数（变量名、解释）、返回值 字段注释：不能尾行注释，数据对象字段不能加默认值 多余的代码注释未删掉，这个需要删掉 临时注释代码（可能会取消注释继续使用）使用三斜杠注释 所有的接口必须注释 代码规范","categories":[],"tags":[]},{"title":"学习微服务记录-个人总结","date":"2018-11-10T09:30:40.000Z","path":"2018/11/10/ibona-2018-11-10-study-microservice/","updated":"2018-11-15T01:37:26.000Z","link":"","excerpt":"参考资料： 什么是微服务架构？ https://www.roncoo.com/article/detail/130121 什么是微服务架构？ https://www.zhihu.com/question/65502802 什么是微服务？ https://www.jianshu.com/p/39c1e4ec0d63 微服务中 Dubbo 和 Spring Cloud 架构技术路线对 https://juejin.im/entry/5ae01ee3518825672d33d6ed 微服务特点体现在『微』字上，服务微小，小巧灵活，功能单一，细颗粒度。微服务是一种架构上的风格，把业务需求不断细分成若干个功能模块，尽量使功能模块提供单一功能。","categories":[{"name":"深圳博纳移动","slug":"深圳博纳移动","permalink":"https://houkunlin.gitee.io/categories/%E6%B7%B1%E5%9C%B3%E5%8D%9A%E7%BA%B3%E7%A7%BB%E5%8A%A8/"},{"name":"学习","slug":"深圳博纳移动/学习","permalink":"https://houkunlin.gitee.io/categories/%E6%B7%B1%E5%9C%B3%E5%8D%9A%E7%BA%B3%E7%A7%BB%E5%8A%A8/%E5%AD%A6%E4%B9%A0/"},{"name":"个人总结","slug":"深圳博纳移动/学习/个人总结","permalink":"https://houkunlin.gitee.io/categories/%E6%B7%B1%E5%9C%B3%E5%8D%9A%E7%BA%B3%E7%A7%BB%E5%8A%A8/%E5%AD%A6%E4%B9%A0/%E4%B8%AA%E4%BA%BA%E6%80%BB%E7%BB%93/"}],"tags":[{"name":"博纳","slug":"博纳","permalink":"https://houkunlin.gitee.io/tags/%E5%8D%9A%E7%BA%B3/"},{"name":"学习计划","slug":"学习计划","permalink":"https://houkunlin.gitee.io/tags/%E5%AD%A6%E4%B9%A0%E8%AE%A1%E5%88%92/"},{"name":"微服务","slug":"微服务","permalink":"https://houkunlin.gitee.io/tags/%E5%BE%AE%E6%9C%8D%E5%8A%A1/"}]},{"title":"hexo 博客系统更换主题：yilia","date":"2018-11-10T08:00:26.000Z","path":"2018/11/10/ibona-2018-11-10-hexo-theme-yilia/","updated":"2022-03-04T03:26:50.196Z","link":"","excerpt":"首选文档：官方中文文档 官方教程走一遍 12345npm install hexo-cli -ghexo init blogcd blognpm installhexo server","categories":[{"name":"深圳博纳移动","slug":"深圳博纳移动","permalink":"https://houkunlin.gitee.io/categories/%E6%B7%B1%E5%9C%B3%E5%8D%9A%E7%BA%B3%E7%A7%BB%E5%8A%A8/"},{"name":"学习","slug":"深圳博纳移动/学习","permalink":"https://houkunlin.gitee.io/categories/%E6%B7%B1%E5%9C%B3%E5%8D%9A%E7%BA%B3%E7%A7%BB%E5%8A%A8/%E5%AD%A6%E4%B9%A0/"},{"name":"教程","slug":"深圳博纳移动/学习/教程","permalink":"https://houkunlin.gitee.io/categories/%E6%B7%B1%E5%9C%B3%E5%8D%9A%E7%BA%B3%E7%A7%BB%E5%8A%A8/%E5%AD%A6%E4%B9%A0/%E6%95%99%E7%A8%8B/"}],"tags":[{"name":"教程","slug":"教程","permalink":"https://houkunlin.gitee.io/tags/%E6%95%99%E7%A8%8B/"},{"name":"hexo","slug":"hexo","permalink":"https://houkunlin.gitee.io/tags/hexo/"}]},{"title":"把SpringBoot项目部署到docker中创建自己的镜像","date":"2018-11-09T09:59:00.000Z","path":"2018/11/09/ibona-2018-11-09-docker-make-images/","updated":"2018-11-10T03:18:34.000Z","link":"","excerpt":"把SpringBoot打包成jar包并部署到docker容器中目前最流行的SpringBoot框架，简单好用，快速搭建项目，开发web项目时，即可以打包成war部署到tomcat中，也可以直接打包成jar使用java -jar spring-project.jar运行我们的web项目。把SpringBoot打包成jar运行的时候，已经给我们默认内置了tomcat，当然也可以改为其他服务器容器，比如jetty等。 制作容器镜像","categories":[{"name":"深圳博纳移动","slug":"深圳博纳移动","permalink":"https://houkunlin.gitee.io/categories/%E6%B7%B1%E5%9C%B3%E5%8D%9A%E7%BA%B3%E7%A7%BB%E5%8A%A8/"},{"name":"学习","slug":"深圳博纳移动/学习","permalink":"https://houkunlin.gitee.io/categories/%E6%B7%B1%E5%9C%B3%E5%8D%9A%E7%BA%B3%E7%A7%BB%E5%8A%A8/%E5%AD%A6%E4%B9%A0/"},{"name":"教程","slug":"深圳博纳移动/学习/教程","permalink":"https://houkunlin.gitee.io/categories/%E6%B7%B1%E5%9C%B3%E5%8D%9A%E7%BA%B3%E7%A7%BB%E5%8A%A8/%E5%AD%A6%E4%B9%A0/%E6%95%99%E7%A8%8B/"}],"tags":[{"name":"docker","slug":"docker","permalink":"https://houkunlin.gitee.io/tags/docker/"},{"name":"SpringBoot","slug":"SpringBoot","permalink":"https://houkunlin.gitee.io/tags/SpringBoot/"},{"name":"博纳","slug":"博纳","permalink":"https://houkunlin.gitee.io/tags/%E5%8D%9A%E7%BA%B3/"},{"name":"学习计划","slug":"学习计划","permalink":"https://houkunlin.gitee.io/tags/%E5%AD%A6%E4%B9%A0%E8%AE%A1%E5%88%92/"},{"name":"spring","slug":"spring","permalink":"https://houkunlin.gitee.io/tags/spring/"}]},{"title":"docker学习记录-个人总结","date":"2018-11-09T09:59:00.000Z","path":"2018/11/09/ibona-2018-11-09-geeks-time-docker/","updated":"2022-03-04T03:26:50.196Z","link":"","excerpt":"过一遍前4章的docker，然后仔细看后面5章的docker原理。需要达到基本了解docker的原理。 运行在进程的容器每创建一个容器，相当于创建一个进程，使用Linux的Namespace机制来创建进程。这个进程拥有一个全新的进程空间，它在这个空间里面的进程ID是1，但是并不影响宿主机的真实进程ID，宿主机的真实进程ID还是原来的值并不是1，这样就产生了一个隔离环境。","categories":[{"name":"深圳博纳移动","slug":"深圳博纳移动","permalink":"https://houkunlin.gitee.io/categories/%E6%B7%B1%E5%9C%B3%E5%8D%9A%E7%BA%B3%E7%A7%BB%E5%8A%A8/"},{"name":"学习","slug":"深圳博纳移动/学习","permalink":"https://houkunlin.gitee.io/categories/%E6%B7%B1%E5%9C%B3%E5%8D%9A%E7%BA%B3%E7%A7%BB%E5%8A%A8/%E5%AD%A6%E4%B9%A0/"},{"name":"个人总结","slug":"深圳博纳移动/学习/个人总结","permalink":"https://houkunlin.gitee.io/categories/%E6%B7%B1%E5%9C%B3%E5%8D%9A%E7%BA%B3%E7%A7%BB%E5%8A%A8/%E5%AD%A6%E4%B9%A0/%E4%B8%AA%E4%BA%BA%E6%80%BB%E7%BB%93/"}],"tags":[{"name":"docker","slug":"docker","permalink":"https://houkunlin.gitee.io/tags/docker/"},{"name":"博纳","slug":"博纳","permalink":"https://houkunlin.gitee.io/tags/%E5%8D%9A%E7%BA%B3/"},{"name":"学习计划","slug":"学习计划","permalink":"https://houkunlin.gitee.io/tags/%E5%AD%A6%E4%B9%A0%E8%AE%A1%E5%88%92/"}]},{"title":"敏捷开发学习记录-个人总结","date":"2018-11-08T09:12:00.000Z","path":"2018/11/08/ibona-2018-11-08-agile-development/","updated":"2022-03-04T03:26:50.194Z","link":"","excerpt":"敏捷开发更多指的是一种思想，而不是完全依靠一套现成管理程序，在项目要转敏捷开发时应当要逐渐转变，而不是立即就应用到项目中，根据团队、项目等具体情况做出不同的管理开发方式。与其他项目管理有相关的管理工具一样，敏捷开发也有敏捷管理工具，但是工具也只是工具，做辅助工作，并不是脱离敏捷管理工具就无法做敏捷开发，因为敏捷开发更多指的是项目开发思想。 简单上线不同于传统的开发模式（瀑布式），瀑布式采用【需求-&gt;设计-&gt;开发-&gt;测试】大致4个阶段,每个阶段确定后才进行下一个阶段,并且到开发阶段的时候有着较完整的需求和开发文档，这种模式耗时长久，产品上线时间长，无法及时的拉取到用户群体。敏捷开发主要体现在敏捷上，首先完成基础功能上线，经过短期的不断迭代更新交付来不断完善功能。敏捷开发讲究的是前期以最简单快捷的方法实现功能，当经过几次迭代后发现当前的框架无法支撑更强大的功能时，此时才进行重构，引入新的框架。","categories":[{"name":"深圳博纳移动","slug":"深圳博纳移动","permalink":"https://houkunlin.gitee.io/categories/%E6%B7%B1%E5%9C%B3%E5%8D%9A%E7%BA%B3%E7%A7%BB%E5%8A%A8/"},{"name":"学习","slug":"深圳博纳移动/学习","permalink":"https://houkunlin.gitee.io/categories/%E6%B7%B1%E5%9C%B3%E5%8D%9A%E7%BA%B3%E7%A7%BB%E5%8A%A8/%E5%AD%A6%E4%B9%A0/"},{"name":"个人总结","slug":"深圳博纳移动/学习/个人总结","permalink":"https://houkunlin.gitee.io/categories/%E6%B7%B1%E5%9C%B3%E5%8D%9A%E7%BA%B3%E7%A7%BB%E5%8A%A8/%E5%AD%A6%E4%B9%A0/%E4%B8%AA%E4%BA%BA%E6%80%BB%E7%BB%93/"}],"tags":[{"name":"博纳","slug":"博纳","permalink":"https://houkunlin.gitee.io/tags/%E5%8D%9A%E7%BA%B3/"},{"name":"学习计划","slug":"学习计划","permalink":"https://houkunlin.gitee.io/tags/%E5%AD%A6%E4%B9%A0%E8%AE%A1%E5%88%92/"},{"name":"敏捷开发","slug":"敏捷开发","permalink":"https://houkunlin.gitee.io/tags/%E6%95%8F%E6%8D%B7%E5%BC%80%E5%8F%91/"}]},{"title":"工作学习计划（11/8～11/18）","date":"2018-11-08T05:59:00.000Z","path":"2018/11/08/ibona-2018-11-08-task/","updated":"2022-03-04T03:26:50.195Z","link":"","excerpt":"学习敏捷开发思想和方法 https://mp.weixin.qq.com/s/Qf00OxEbwv4wiHS5oG0-uQ 通过网上资料和书本 输出一篇学习心得 如何避免强行敏捷，以及敏捷开发中会遇到的问题？ 学习容器技术","categories":[{"name":"深圳博纳移动","slug":"深圳博纳移动","permalink":"https://houkunlin.gitee.io/categories/%E6%B7%B1%E5%9C%B3%E5%8D%9A%E7%BA%B3%E7%A7%BB%E5%8A%A8/"},{"name":"学习","slug":"深圳博纳移动/学习","permalink":"https://houkunlin.gitee.io/categories/%E6%B7%B1%E5%9C%B3%E5%8D%9A%E7%BA%B3%E7%A7%BB%E5%8A%A8/%E5%AD%A6%E4%B9%A0/"}],"tags":[{"name":"博纳","slug":"博纳","permalink":"https://houkunlin.gitee.io/tags/%E5%8D%9A%E7%BA%B3/"},{"name":"学习计划","slug":"学习计划","permalink":"https://houkunlin.gitee.io/tags/%E5%AD%A6%E4%B9%A0%E8%AE%A1%E5%88%92/"}]},{"title":"激活 Jetbrains 系列产品(2018 2.x/3.x可用)","date":"2018-08-23T02:24:00.000Z","path":"2018/08/23/activation-Jetbrains/","updated":"2018-11-27T01:33:44.000Z","link":"","excerpt":"2023年4月20日更新：这个方法已经过时了，无法再激活新版本了 2018年11月27日更新记录：添加破解补丁3.4版本。 在下载2018.3.x版本的GoLang时，使用3.1版本破解补丁无法破解，此时更换破解补丁为3.4版本即可。破解过程与3.1版本一致并无变化。 记录一个IDEA激活服务器的相关地址 rover12421.com 相关网站，Jetbrains激活相关网站 idea.lanyus.com 相关教程 https://blog.ouyanglol.com/article/details/258366 https://blog.csdn.net/zwj1030711290/article/details/81635167 相关文件 本地下载(2018 2.x可用) JetbrainsCrack-3.1-release-enc.jar 本地下载(2018 3.x可用) JetbrainsIdesCrack-3.4-release-enc.jar 其他网站下载(2018 2.x可用) http://idea.lanyus.com/jar/JetbrainsCrack-3.1-release-enc.jar 其他网站下载(2018 3.x可用) http://idea.lanyus.com/jar/JetbrainsIdesCrack-3.4-release-enc.jar","categories":[{"name":"开发工具","slug":"开发工具","permalink":"https://houkunlin.gitee.io/categories/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/"},{"name":"Jetbrains","slug":"开发工具/Jetbrains","permalink":"https://houkunlin.gitee.io/categories/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/Jetbrains/"}],"tags":[{"name":"IDEA","slug":"IDEA","permalink":"https://houkunlin.gitee.io/tags/IDEA/"},{"name":"WebStorm","slug":"WebStorm","permalink":"https://houkunlin.gitee.io/tags/WebStorm/"}]},{"title":"花点时间学点git并且实践","date":"2018-08-23T02:24:00.000Z","path":"2018/08/23/study-git/","updated":"2018-11-15T02:51:28.000Z","link":"","excerpt":"那一天，我们擦出了爱的火花，从此我们不分彼此。git init 突然有一天，因为钱的问题，我们发生了一点分歧。git checkout -b money 我在钱的道路上努力的奔跑者，而你还停留在原地。git commit -am ‘赚钱中…’ 在未来的一天，我的钱赚了一部分，打算暂时结束我们之间的矛盾。git commit -am ‘fix #我们分开的那一天’ 我回到了你在的地方。git checkout master 我跟你说，我赚了一点钱，现在我把我的钱给你，把我们的钱合并在一起，你欣然的接受了。git merge money 此时，你跟我站在一起，我们有着同样的钱，但是我还是要继续去赚钱。git checkout money 然后再把我们的钱合并。git checkout master|git merge monery 在未来，突然有一天，我们的钱赚够了，从此不再出去赚钱，留着赚钱的那条路也没用了。git branch -D money 我在赚钱的路上不断的行走着，有一天我的生活环境和工作环境变好了，我回去跟你说，走吧，去我那里，我们一起过 git checkout master git rebase money 我时刻在工作岗位不断的努力工作，但是任务繁多，难以梳理清楚，我选择先暂时挑出一项工作专注于它 git checkout -b feature/handlerDoc 当我专注的功能完成后，我需要把我完成的功能整理好放到完成任务架子上，并且腾出我刚刚使用的空间、草稿 git checkout master git rebase feature/handlerDoc git branch -D feature/handlerDoc","categories":[],"tags":[{"name":"git","slug":"git","permalink":"https://houkunlin.gitee.io/tags/git/"}]}]